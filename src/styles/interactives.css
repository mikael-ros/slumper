/************************************/
/* Buttons, options, select, e.t.c. */
/************************************/
.interactive {
    --_interactive-height: var(--interactive-height, 3em);
    --_interactive-width: var(--interactive-width, 3em);
    --_anim-int-radius: var(--anim-int-radius, var(--_int-radius));
    --_int-radius: var(--int-radius, var(--mild-border-radius));
    --_flex: var(--flex, 1);
    --_img-pad: var(--img-pad, 1em);

    --_animation-speed: var(--animation-speed, var(--transition-duration-fast));
    --_rotate: var(--rotate, 0deg);
    --_anim-rotate: var(--anim-rotate, var(--_rotate));
    --_scale: var(--scale, 1);

    /* Remove default styling */
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;

    display: flex;
    align-items: center;
    justify-content: center;
    align-content: center;

    font-family: inherit;
    flex: var(--_flex);

    min-width: min(100%, min(var(--interactive-width), var(--_interactive-height)));
    width: max(100%,var(--_interactive-width));
    max-width: 100%;
    min-height: max(100%, var(--interactive-height));
    height: var(--_interactive-height);
    max-height: 100%;

    padding: calc(.5*var(--_int-radius)) var(--_int-radius);

    border: none; /* Backup unapplication */
    border-radius: var(--_anim-int-radius);
    
    background: none; /* Backup unapplication */
    background-color: rgba(var(--backdrop-color),0.3);
    color: var(--text-color-negative);

    font-size: 1.1em;
    text-align: center;
    text-shadow: .1em .1em 0px var(--text-color-shadowed);
    text-overflow: ellipsis;

    cursor: pointer;
    overflow: hidden;
    
    transition: filter, border-radius, 
                width, height, 
                min-width, min-height, 
                max-width, max-height;
    transition-duration:    var(--transition-duration-fast), var(--transition-duration-fast), 
                            var(--transition-duration-fast), var(--transition-duration-fast), 
                            var(--transition-duration-fast), var(--transition-duration-fast), 
                            var(--transition-duration-fast), var(--transition-duration-fast);

    filter: var(--filter);
    -webkit-filter: var(--filter);

    -webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* Disables the ugly tap color that displays in mobile chrome */
}

.interactive--fit-width {
    min-width: fit-content;
}

.interactive--triple-width {
    --flex: 3;
}

.interactive--heavy,
.checkbox-label {
    font-weight: 600;
}

/* User invalid only colors when user has interacted, 
    and the other selector makes sure that it 
    starts coloring when the user IS interacting! */
.interactive--input:user-invalid, .interactive--input:focus:invalid {
    color: red;
}

.interactive:disabled{
    --filter: brightness(70%);
    cursor: not-allowed;
}

.interactive p {
    display: inline-flex;
    align-items: center;
    justify-content: center;

    color: var(--text-color-negative-dull);

    padding-left: .35em;
}

.icon-only {
    padding: .2em;
    min-width: var(--_interactive-height);
    max-width: var(--_interactive-height);
    min-height: var(--_interactive-height);
    max-height: var(--_interactive-height);
}


.interactive img {
    width: calc(var(--_interactive-height) - var(--_img-pad));
    height: calc(var(--_interactive-height) - var(--_img-pad));

    padding: .1em;

    filter: brightness(200%) contrast(75%);
    -webkit-filter: brightness(200%) contrast(75%);
}

.interactive img:first-of-type {
    transform: rotate(var(--_anim-rotate)) scale(var(--_scale));
    transition: transform;
    transition-duration: var(--_animation-speed);
}

.interactive:not(:disabled):hover, .interactive:not(:disabled):focus-visible {
    --anim-int-radius: var(--default-border-radius);
    --filter: brightness(0.95);
    outline: none;
}

.interactive:not(:disabled):hover, .interactive:not(:disabled):focus-visible {
    --scale: 1.05;
    --anim-rotate: 10deg;
}

.interactive--spinny {
    --animation-speed: var(--transition-duration-medium);
}

.interactive--spinny:not(:disabled):hover, .interactive--spinny:not(:disabled):focus-visible {
    --anim-rotate: 360deg;
}

.button:disabled:hover{
    --anim-int-radius: var(--mild-border-radius); 
}

@media (hover: none) {
    .interactive:not(:disabled):focus {
        outline: solid .1em var(--primary);
        outline-offset: -.1em;
    }
}

/* Only supported on some browsers */
select option {
    background-color: white;
    color: var(--text-color);
    font-weight: initial !important;
    text-shadow: none;
}

.link-with-button {
    text-decoration: none;
}

/**********/
/* Groups */
/**********/

.button-group > * {
    margin: 0;
}

.button-group .interactive--input-faux {
    display: none;
}

.interactive-group {
    --gap: .75em;
    display: flex;
    align-items: center;
    margin: calc(-1*var(--gap)) 0 0 calc(-1*var(--gap)) !important; /* It refuses to apply properly without this ??? */
}

/* Any interactive group within some body of other elements */
*~.interactive-group {
    margin: calc(-1*var(--gap) + 1em) 0 0 calc(-1*var(--gap)) !important; /* It refuses to apply properly without this ??? */
}

.interactive-group > * {
    margin: var(--gap) 0 0 var(--gap);
}

.interactive-group--medium {
    --gap: .5em;
}

.interactive-group--tight {
    --gap: .25em;
}

@supports ((aspect-ratio: 1 / 1) and (gap: 0)) {
    .interactive-group {
        gap: var(--gap);
        margin: 0 !important;
    }

    *~.interactive-group {
        margin-top: 1em !important; /* It refuses to apply properly without this ??? */
    }

    .interactive-group > * {
        margin: 0;
    }
}

/**********/
/* Inputs */
/**********/

.input-list {
    display: flex;
    
    --gap: .75em;
    margin: calc(-1*var(--gap)) 0 0 calc(-1*var(--gap));
}

.input-list > *:not(.interactive-group) {
    margin: var(--gap) 0 0 var(--gap);
}

.input-list--vertical {
    flex-direction: column;
    margin: calc(-1*var(--gap)) 0 0 0;
}

.input-list--vertical > *:not(.interactive-group) {
    margin: var(--gap) 0 0 0;
}

@supports ((aspect-ratio: 1 / 1) and (gap: 0)) {
    .input-list, .input-list--vertical {
        gap: var(--gap);
        margin: 0;
    }

    .input-list > *:not(.interactive-group), .input-list--vertical > *:not(.interactive-group)  {
        margin: 0;
    }
}

.input-group * {
    color: var(--text-color-negative-dull);
}

.input-group .interactive--input{
    width: 100%;
}

.checkbox {
    display: flex;
    position: relative;
    height: 2em;
    width: 2em;
    margin: .25em;
}

input[type='checkbox'], input[type='checkbox']:checked{ /* The checkbox itself */
    height: 100%;
    width: 100%;
    min-width: 100%;
}

.checkbox-label {
    position: absolute;
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;

    height: 100%;
    width: 100%;
    line-height: 100%;

    font-size: .7em;
    padding: 0.2em;
    
    
    color: var(--text-color);

    text-shadow: none;

    background: none;
    background-color: unset;

    /* Make it not interfere with the checkbox */
    user-select: none;
    pointer-events: none;
    touch-action: none;
}

input[type='checkbox']:checked + label {
    color: var(--text-color-negative); 
}


@media (max-width:900px)  {
    .interactive-group {
        flex-wrap: wrap;
        justify-content: center;
    }
    
    .checkbox {
        margin: 0.25em;
    }

    .interactive-group .button-group{
        flex-wrap: wrap;
    }

    .interactive-group {
        --gap: .5em;
    }
    
    .interactive-group--tight {
        --gap: .15em;
    }
}