/***********/
/* Buttons */
/***********/
button, 
select, 
option, 
input:not([type='checkbox']), 
.checkbox-label, 
.faux-button{
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;

    display: flex;
    align-items: center;
    justify-content: center;
    align-content: center;

    width: 100%;

    padding: var(--mild-border-radius);

    border: none;
    border-radius: var(--mild-border-radius);
    
    background: none;
    
    background-color: rgba(var(--backdrop-color),0.3);
    color: var(--text-color-negative);

    font-size: 1.1em;
    text-align: center;
    text-shadow: .1em .1em 0px var(--text-color-shadowed);
    text-overflow: ellipsis;

    cursor: pointer;

    transition: filter, border-radius;
    transition-duration: var(--transition-duration-fast);

    --filter: unset;
    filter: var(--filter);
    -webkit-filter: var(--filter);

    -webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* Disables the ugly tap color that displays in mobile chrome */
}

button, 
select, 
option, 
.checkbox-label, 
.faux-button {
    font-weight: 600;
}

/* User invalid only colors when user has interacted, 
    and the other selector makes sure that it 
    starts coloring when the user IS interacting! */
input:not([type='checkbox']):user-invalid, input:not([type='checkbox']):focus:invalid {
    color: red;
}

button:disabled, 
select:disabled, 
option:disabled, 
input:not([type='checkbox']):disabled, 
.checkbox-label:disabled, 
.faux-button:disabled{
    --filter: brightness(70%);
    cursor: not-allowed;
}

button img, 
select img, 
option img, 
input:not([type='checkbox']) img, 
.checkbox-label img, 
.faux-button img{
    width: 2em;
    height: 2em;

    padding: .1em;

    transform: scale(0.9);
    filter: brightness(200%) contrast(75%);
    -webkit-filter: brightness(200%) contrast(75%);
}

button p, 
select p, 
option p, 
input:not([type='checkbox']) p, 
.checkbox-label p, 
.faux-button p{
    display: inline-flex;
    align-items: center;
    justify-content: center;

    color: var(--text-color-negative-dull);

    padding-left: .35em;
    
    min-width: 2em;
    height: 100%;
}

@media (hover: none) {
    button:hover, button:focus,
    select:hover, select:focus,
    option:hover, option:focus, 
    input:not([type='checkbox']):hover, input:not([type='checkbox']):focus, 
    .checkbox-label:hover, .checkbox-label::focus,
    .faux-button:hover, .faux-button:focus {
        border-radius: var(--default-border-radius);
        --filter: brightness(0.95);

        transition: filter, border-radius;
        transition-duration: var(--transition-duration-fast);
    }

    button:hover img, button:focus img,
    .faux-button:hover img, .faux-button:focus img {
        transform: scale(1.05) rotate(10deg);
    }

    button:focus,
    select:focus,
    option:focus, 
    input:not([type='checkbox']):focus, 
    .checkbox-label::focus,
    .faux-button:focus {
        outline: none;
    }

    input:not([type='checkbox']):focus, 
    .checkbox-label::focus,
    .faux-button:focus {
        outline: solid .1em var(--primary);
        outline-offset: -.1em;
    }

    button:disabled:hover{
        border-radius: var(--mild-border-radius); 
    }
}

/* Only supported on some browsers */
select option {
    background-color: white;
    color: var(--text-color);
    font-weight: initial !important;
    text-shadow: none;
}

.link-with-button {
    text-decoration: none;
}

.icon-only{
    max-width: 3em;
}

.button-group * {
    width: 100%;
    margin: 0;
}

.button-group input {
    display: none;
}

.interactive-group {
    --gap: .75em;
    display: flex;
    margin: calc(-1*var(--gap)) 0 0 calc(-1*var(--gap));
}

.interactive-group > * {
    margin: var(--gap) 0 0 var(--gap);
}

.interactive-group--tight {
    --gap: .25em;
}

@supports ((aspect-ratio: 1 / 1) and (gap: 0)) {
    .interactive-group {
        gap: var(--gap);
        margin: 0;
    }

    .interactive-group > * {
        margin: 0;
    }
}

/**********/
/* Inputs */
/**********/

.input-list {
    display: flex;
    --gap: .75em;
    margin: calc(-1*var(--gap)) 0 0 calc(-1*var(--gap));
}

.input-list > * {
    margin: var(--gap) 0 0 var(--gap);
}

.input-list--vertical {
    flex-direction: column;
}

@supports ((aspect-ratio: 1 / 1) and (gap: 0)) {
    .input-list {
        gap: var(--gap);
    }

    .input-list > * {
        margin: 0;
    }
}

.input-group{
    height: 2em;
}

.input-group * {
    height: 100%;
    
    color: var(--text-color-negative-dull);
}

.input-group p {
    line-height: 2em;
}

.input-group input{
    width: 100%;
    margin: 0;
}

.checkbox {
    display: flex;
    position: relative;
    height: 2em;
    width: 2em;
    margin: .25em;
}

input[type='checkbox'], input[type='checkbox']:checked{ /* The checkbox itself */
    height: 100%;
    width: 100%;
    min-width: 100%;
}

.checkbox-label {
    position: absolute;
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;

    height: 100%;
    width: 100%;
    line-height: 100%;

    font-size: .7em;
    padding: 0.2em;
    
    
    color: var(--text-color);

    text-shadow: none;

    background: none;
    background-color: unset;

    /* Make it not interfere with the checkbox */
    user-select: none;
    pointer-events: none;
    touch-action: none;
}

input[type='checkbox']:checked + label {
    color: var(--text-color-negative); 
}


@media (max-width:900px)  {
    .checkbox {
        margin: 0.25em;
    }

    .interactive-group .button-group{
        flex-wrap: wrap;
    }

    .interactive-group {
        --gap: .5em;
    }
    
    .interactive-group--tight {
        --gap: .15em;
    }
}