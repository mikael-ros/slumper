/***********/
/* Buttons */
/***********/
button, select, option, input:not([type=checkbox]), .checkbox-label, .faux-button{
    display: flex;
    align-items: center;
    justify-content: center;
    align-content: center;

    width: 100%;

    padding: var(--mild-border-radius);

    border: none;
    border-radius: var(--mild-border-radius);
    background-color: rgba(var(--backdrop-color),0.3);
    color: var(--text-color-negative);

    font-size: 1.1em;
    text-align: center;
    text-shadow: .1em .1em 0px var(--text-color-shadowed);
    text-overflow: ellipsis;

    cursor: pointer;

    transition: filter, border-radius;
    transition-duration: var(--transition-duration-fast);

    &:not(input) {
        font-weight: 600;
    }

    /* User invalid only colors when user has interacted, 
    and the other selector makes sure that it 
    starts coloring when the user IS interacting! */
    &:user-invalid, &:focus:invalid { 
        color: red;
    }

    &:hover, &:focus{
        border-radius: var(--default-border-radius);
        filter: brightness(0.95);

        transition: filter, border-radius;
        transition-duration: var(--transition-duration-fast);

        img {
            transform: scale(1.05) rotate(10deg);
        }
    }

    &:focus {
        outline: none;
    }

    &:not(button, select):focus {
        outline: solid .1em var(--primary);
        outline-offset: -.1em;
    }

    &:disabled{
        filter: brightness(70%);
        cursor: not-allowed;

        &:hover{
            border-radius: var(--mild-border-radius); 
        }
    }

    img{
        width: 2em;
        height: 2em;

        padding: .1em;

        transform: scale(0.9);
        filter: brightness(200%) contrast(75%);
    }

    p{
        display: inline-flex;
        align-items: center;
        justify-content: center;

        color: var(--text-color-negative-dull);

        padding-left: .35em;
        
        min-width: 2em;
        height: 100%;
    }
}

/** Links with buttons inside them should have no styling **/
a:has(> button){
    text-decoration: none;
}

.icon-only{
    max-width: 3em;
}

.button-group{
    button, input, label {
        width: 100%;
        margin: 0;
    }

    input {
        display: none;
    }
}

.interactive-group {
    --gap: .75em;
    display: flex;
    gap: var(--gap);
}

.interactive-group--tight {
    --gap: .25em;
}

/**********/
/* Inputs */
/**********/

.input-list {
    display: flex;
    gap: .75em;
}

.input-list--vertical {
    flex-direction: column;
}

.input-group{
    height: 2em;

    * {
        height: 100%;
        
        color: var(--text-color-negative-dull);
    }

    p {
        line-height: 2em;
    }

    input{
        width: 100%;
        margin: 0;
    }

    input:first-of-type{
        min-width: 70%;
    }
}

.checkbox {
    input[type='checkbox']{ /* The checkbox itself */
        margin: 1em;
    
        transform: scale(2.5); /* Visual size */
    }

    .checkbox-label {
        align-items: end;
        justify-content: end;
        position: relative;
        top:-3%;
        width: 81%;
        height: 0;
        margin: 0;
        padding: 0;

        font-size: .7em;
        line-height: 200%;
        color: var(--text-color);
 
        text-shadow: none;

        background: none;

        /* Make it not interfere with the checkbox */
        user-select: none;
        pointer-events: none;
        touch-action: none;
    }
    input[type='checkbox']:checked + label {
        color: var(--text-color-negative); 
        
    }
}

@media (max-width:900px)  {
    .checkbox {
        input[type='checkbox']{
            margin: 1.5em;
        
            transform: scale(3); /* Visual size */
        }
    }

    .interactive-group .button-group{
        flex-wrap: wrap;
    }

    .interactive-group {
        --gap: .5em;
    }
    
    .interactive-group--tight {
        --gap: .15em;
    }
}