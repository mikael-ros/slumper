#timer:has([data-elapsed = "true"]){
    --default-color: rgba(var(--secondaryRGB),0.3);
    --mid-flash-color: rgba(var(--highlight-color),0.2);
    --current-color: var(--default-color);
    background-color: var(--current-color, red);

    transition-property: background-color;
    transition-duration: var(--transition-duration-medium);

    animation: flash 1s 1;
}

.timer {
    text-align: center; 
    margin: 0;
}

[data-elapsed = "true"]{
    --default-color: var(--secondary);
    --mid-flash-color: var(--text-color-negative);
    --current-color: var(--default-color);
    color: var(--current-color, red);

    transition-property: color;
    transition-duration: var(--transition-duration-medium);

    animation: flash .5s 2;
}

#timer-display{
    height: 0em;

    transition-property: height;
    transition-duration: var(--transition-duration-medium);

    &[data-open = "true"]{
        height: 3em;
    }
}

#timer-config{
    display: flex;
    align-items: center;
    height: 3em;
    
    button {
        height: 3em;
        width: 100%;

        margin: 0;
        transition-property: width, border-radius, filter;
        transition-duration: var(--transition-duration-medium), var(--transition-duration-fast);

        &:hover{
            border-radius: var(--default-border-radius);
            filter: brightness(0.95);
    
            transition-property: width, border-radius, filter;
            transition-duration: var(--transition-duration-medium), var(--transition-duration-fast);
        }    

        &:disabled:hover{
            border-radius: var(--mild-border-radius);
            filter: brightness(70%);
            cursor: not-allowed;
        }

        &[data-open = "true"]{
            width: 70%;
        }
    }

    input {
        width: 30%;
        height: 3em;
    }
}

@keyframes flash {
    0% {--current-color: var(--default-color)}
    50% {--current-color: var(--mid-flash-color)}
    100% {--current-color: var(--default-color)}
}